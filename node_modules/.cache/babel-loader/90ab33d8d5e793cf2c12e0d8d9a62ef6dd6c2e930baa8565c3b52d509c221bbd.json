{"ast":null,"code":"var _jsxFileName = \"/home/addo/Development/code/code-challenges/Bank-Of-Flatiron/src/components/Account.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Transactionlist from \"./Transactionlist\";\nimport Search from \"./Search\";\nimport AddTransaction from \"./AddTransaction\";\nimport \"../stylesheets/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Account = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [select, setSelect] = useState(\"all\");\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\").then(response => response.json()).then(data => setTransactions(data)).catch(error => {\n      console.error(\"Error fetching transactions:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    setFilteredTransactions(filterTransactions(transactions, search, select));\n  }, [search, select, transactions]);\n  const addTransaction = newTransaction => {\n    // Send the new transaction data to the back-end\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => response.json()).then(data => {\n      // Update the state to add the new transaction to the front-end\n      setTransactions(prevTransactions => [...prevTransactions, data]);\n    }).catch(error => {\n      console.error(\"Error adding transaction:\", error);\n    });\n  };\n  const deleteTransaction = deletedTransactionId => {\n    // Send a DELETE request to the back-end to delete the transaction\n    fetch(`http://localhost:8001/transactions/${deletedTransactionId}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(data => {\n      // Update the state to remove the deleted transaction from the front-end\n      setTransactions(prevTransactions => prevTransactions.filter(transaction => transaction.id !== deletedTransactionId));\n    }).catch(error => {\n      console.error(\"Error deleting transaction:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      searchValue: search,\n      searchFun: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransaction, {\n      addTransactionFun: addTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Transactionlist, {\n      transactions: filteredTransactions,\n      select: select,\n      selectFun: setSelect,\n      deleteTransactionFun: deleteTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Account, \"ZXQygVcs9VtAVww/oaccSH2KGTo=\");\n_c = Account;\nconst filterTransactions = (transactions, search, select) => {\n  let filteredData = [...transactions];\n  filteredData = filteredData.filter(transaction => {\n    return transaction.description.toLowerCase().includes(search.toLowerCase());\n  });\n  switch (select) {\n    case \"descriptionUP\":\n      filteredData.sort((a, b) => a.description.localeCompare(b.description));\n      break;\n    case \"descriptionDOWN\":\n      filteredData.sort((a, b) => b.description.localeCompare(a.description));\n      break;\n    case \"categoryUP\":\n      filteredData.sort((a, b) => a.category.localeCompare(b.category));\n      break;\n    case \"categoryDOWN\":\n      filteredData.sort((a, b) => b.category.localeCompare(a.category));\n      break;\n    case \"amountUP\":\n      filteredData.sort((a, b) => a.amount - b.amount);\n      break;\n    case \"amountDOWN\":\n      filteredData.sort((a, b) => b.amount - a.amount);\n      break;\n    case \"dateUP\":\n      filteredData.sort((a, b) => new Date(a.date) - new Date(b.date));\n      break;\n    case \"dateDOWN\":\n      filteredData.sort((a, b) => new Date(b.date) - new Date(a.date));\n      break;\n    default:\n      break;\n  }\n  return filteredData;\n};\nexport default Account;\nvar _c;\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"names":["React","useState","useEffect","Transactionlist","Search","AddTransaction","jsxDEV","_jsxDEV","Account","_s","transactions","setTransactions","search","setSearch","select","setSelect","filteredTransactions","setFilteredTransactions","fetch","then","response","json","data","catch","error","console","filterTransactions","addTransaction","newTransaction","method","headers","body","JSON","stringify","prevTransactions","deleteTransaction","deletedTransactionId","filter","transaction","id","children","searchValue","searchFun","fileName","_jsxFileName","lineNumber","columnNumber","addTransactionFun","selectFun","deleteTransactionFun","_c","filteredData","description","toLowerCase","includes","sort","a","b","localeCompare","category","amount","Date","date","$RefreshReg$"],"sources":["/home/addo/Development/code/code-challenges/Bank-Of-Flatiron/src/components/Account.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Transactionlist from \"./Transactionlist\";\nimport Search from \"./Search\";\nimport AddTransaction from \"./AddTransaction\";\nimport \"../stylesheets/App.css\";\n\nconst Account = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [select, setSelect] = useState(\"all\");\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then((response) => response.json())\n      .then((data) => setTransactions(data))\n      .catch((error) => {\n        console.error(\"Error fetching transactions:\", error);\n      });\n  }, []);\n\n  useEffect(() => {\n    setFilteredTransactions(filterTransactions(transactions, search, select));\n  }, [search, select, transactions]);\n\n  const addTransaction = (newTransaction) => {\n    // Send the new transaction data to the back-end\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the state to add the new transaction to the front-end\n        setTransactions((prevTransactions) => [...prevTransactions, data]);\n      })\n      .catch((error) => {\n        console.error(\"Error adding transaction:\", error);\n      });\n  };\n\n  const deleteTransaction = (deletedTransactionId) => {\n    // Send a DELETE request to the back-end to delete the transaction\n    fetch(`http://localhost:8001/transactions/${deletedTransactionId}`, {\n      method: \"DELETE\",\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the state to remove the deleted transaction from the front-end\n        setTransactions((prevTransactions) =>\n          prevTransactions.filter((transaction) => transaction.id !== deletedTransactionId)\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error deleting transaction:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <Search searchValue={search} searchFun={setSearch} />\n      <AddTransaction addTransactionFun={addTransaction} />\n      <Transactionlist\n        transactions={filteredTransactions}\n        select={select}\n        selectFun={setSelect}\n        deleteTransactionFun={deleteTransaction}\n      />\n    </div>\n  );\n};\n\nconst filterTransactions = (transactions, search, select) => {\n  let filteredData = [...transactions];\n\n  filteredData = filteredData.filter((transaction) => {\n    return transaction.description.toLowerCase().includes(search.toLowerCase());\n  });\n\n  switch (select) {\n    case \"descriptionUP\":\n      filteredData.sort((a, b) => a.description.localeCompare(b.description));\n      break;\n    case \"descriptionDOWN\":\n      filteredData.sort((a, b) => b.description.localeCompare(a.description));\n      break;\n    case \"categoryUP\":\n      filteredData.sort((a, b) => a.category.localeCompare(b.category));\n      break;\n    case \"categoryDOWN\":\n      filteredData.sort((a, b) => b.category.localeCompare(a.category));\n      break;\n    case \"amountUP\":\n      filteredData.sort((a, b) => a.amount - b.amount);\n      break;\n    case \"amountDOWN\":\n      filteredData.sort((a, b) => b.amount - a.amount);\n      break;\n    case \"dateUP\":\n      filteredData.sort((a, b) => new Date(a.date) - new Date(b.date));\n      break;\n    case \"dateDOWN\":\n      filteredData.sort((a, b) => new Date(b.date) - new Date(a.date));\n      break;\n    default:\n      break;\n  }\n\n  return filteredData;\n};\n\nexport default Account;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}