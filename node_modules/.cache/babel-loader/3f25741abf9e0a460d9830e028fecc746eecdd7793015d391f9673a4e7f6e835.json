{"ast":null,"code":"var _jsxFileName = \"/home/addo/Development/code/code-challenges/Bank-Of-Flatiron/src/components/Search.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = props => {\n  // Event handler to update the search text in the parent component\n  let handleChange = evt => {\n    // Call the 'searchFun' prop with the updated search text\n    props.searchFun(evt.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search input\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search your Recent Transactions\",\n      value: props.searchValue,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"search-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n// Prop types for the 'searchValue' and 'searchFun' props\n_c = Search;\nSearch.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  searchFun: PropTypes.func.isRequired\n};\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","PropTypes","jsxDEV","_jsxDEV","Search","props","handleChange","evt","searchFun","target","value","className","children","type","placeholder","searchValue","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["/home/addo/Development/code/code-challenges/Bank-Of-Flatiron/src/components/Search.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/App.css\";\n\nconst Search = (props) => {\n  // Event handler to update the search text in the parent component\n  let handleChange = (evt) => {\n    // Call the 'searchFun' prop with the updated search text\n    props.searchFun(evt.target.value);\n  };\n\n  return (\n    <div className=\"search input\">\n      {/* Input field for search */}\n      <input\n        type=\"text\"\n        placeholder={\"Search your Recent Transactions\"}\n        value={props.searchValue}\n        onChange={handleChange}\n      />\n      {/* Search icon */}\n      <i className=\"search-icon\"></i>\n    </div>\n  );\n};\n\n// Prop types for the 'searchValue' and 'searchFun' props\nSearch.propTypes = {\n  searchValue: PropTypes.string.isRequired,\n  searchFun: PropTypes.func.isRequired,\n};\n\nexport default Search;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,MAAM,GAAIC,KAAK,IAAK;EACxB;EACA,IAAIC,YAAY,GAAIC,GAAG,IAAK;IAC1B;IACAF,KAAK,CAACG,SAAS,CAACD,GAAG,CAACE,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAE3BT,OAAA;MACEU,IAAI,EAAC,MAAM;MACXC,WAAW,EAAE,iCAAkC;MAC/CJ,KAAK,EAAEL,KAAK,CAACU,WAAY;MACzBC,QAAQ,EAAEV;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eAEFjB,OAAA;MAAGQ,SAAS,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GAtBMjB,MAAM;AAuBZA,MAAM,CAACkB,SAAS,GAAG;EACjBP,WAAW,EAAEd,SAAS,CAACsB,MAAM,CAACC,UAAU;EACxChB,SAAS,EAAEP,SAAS,CAACwB,IAAI,CAACD;AAC5B,CAAC;AAED,eAAepB,MAAM;AAAC,IAAAiB,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}