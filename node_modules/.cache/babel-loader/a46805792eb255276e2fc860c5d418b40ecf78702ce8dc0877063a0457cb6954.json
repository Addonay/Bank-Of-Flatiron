{"ast":null,"code":"var _jsxFileName = \"/home/addo/Development/code/code-challenges/Bank-Of-Flatiron1/src/components/AddTransaction.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTransaction = ({\n  addTransactionFun\n}) => {\n  _s();\n  const [date, setDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const handleChange = evt => {\n    const {\n      name,\n      value\n    } = evt.target;\n    switch (name) {\n      case \"date\":\n        setDate(value);\n        break;\n      case \"description\":\n        setDescription(value);\n        break;\n      case \"category\":\n        setCategory(value);\n        break;\n      case \"amount\":\n        setAmount(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    // Send the new transaction data to the back-end\n    const newTransaction = {\n      date,\n      description,\n      category,\n      amount: parseFloat(amount)\n    };\n\n    // Send a POST request to the back-end to add the transaction\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => response.json()).then(data => {\n      // Update the state to add the new transaction to the front-end\n      addTransactionFun(data);\n      // Reset the input fields after successful addition\n      setDate(\"\");\n      setDescription(\"\");\n      setCategory(\"\");\n      setAmount(\"\");\n    }).catch(error => {\n      console.error(\"Error adding transaction:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"segment\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inline fields\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"date\",\n          value: date,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"category\",\n          placeholder: \"Category\",\n          value: category,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          placeholder: \"Amount\",\n          step: \"0.01\",\n          value: amount,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"primary-btn\",\n        type: \"submit\",\n        disabled: isButtonDisabled,\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTransaction, \"R1FiiSMYEmUInYnsopU/p4tML2Y=\");\n_c = AddTransaction;\nAddTransaction.propTypes = {\n  addTransactionFun: PropTypes.func.isRequired\n};\nexport default AddTransaction;\nvar _c;\n$RefreshReg$(_c, \"AddTransaction\");","map":{"version":3,"names":["React","useState","PropTypes","jsxDEV","_jsxDEV","AddTransaction","addTransactionFun","_s","date","setDate","description","setDescription","category","setCategory","amount","setAmount","handleChange","evt","name","value","target","handleSubmit","preventDefault","newTransaction","parseFloat","fetch","method","headers","body","JSON","stringify","then","response","json","data","catch","error","console","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","step","disabled","isButtonDisabled","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/home/addo/Development/code/code-challenges/Bank-Of-Flatiron1/src/components/AddTransaction.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../stylesheets/App.css\";\n\nconst AddTransaction = ({ addTransactionFun }) => {\n  const [date, setDate] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n\n  const handleChange = (evt) => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case \"date\":\n        setDate(value);\n        break;\n      case \"description\":\n        setDescription(value);\n        break;\n      case \"category\":\n        setCategory(value);\n        break;\n      case \"amount\":\n        setAmount(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    // Send the new transaction data to the back-end\n    const newTransaction = {\n      date,\n      description,\n      category,\n      amount: parseFloat(amount),\n    };\n\n    // Send a POST request to the back-end to add the transaction\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newTransaction),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        // Update the state to add the new transaction to the front-end\n        addTransactionFun(data);\n        // Reset the input fields after successful addition\n        setDate(\"\");\n        setDescription(\"\");\n        setCategory(\"\");\n        setAmount(\"\");\n      })\n      .catch((error) => {\n        console.error(\"Error adding transaction:\", error);\n      });\n  };\n\n  return (\n    <div className=\"segment\">\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input\n            type=\"date\"\n            name=\"date\"\n            value={date}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={description}\n            onChange={handleChange}\n          />\n          <input\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            value={category}\n            onChange={handleChange}\n          />\n          <input\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            value={amount}\n            onChange={handleChange}\n          />\n        </div>\n        <button className=\"primary-btn\" type=\"submit\" disabled={isButtonDisabled}>\n          Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n};\n\nAddTransaction.propTypes = {\n  addTransactionFun: PropTypes.func.isRequired,\n};\n\nexport default AddTransaction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}